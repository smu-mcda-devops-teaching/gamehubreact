# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- qa

pool:
  vmImage: ubuntu-latest

variables:
  projectName: 'GameHubReact.Client'
  targetDirectory: 'src/client/'
  buildConfiguration: 'Release'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- task: UseDotNet@2
  inputs:
    version: 6.x
  displayName: 'Use .NET Core sdk 6.x'
- task: PowerShell@2
  displayName: Clean
  inputs:
    targetType: 'inline'
    script: |
      dotnet nuget locals all --clear

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(targetDirectory)**/*.csproj'
  displayName: 'Restore'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(targetDirectory)**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration)'
  
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '$(targetDirectory)**/*.csproj'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
  displayName: 'Publish $(buildConfiguration)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    ArtifactName: '$(projectName)' 
    publishLocation: 'Container'
  displayName: "Upload Artifacts"